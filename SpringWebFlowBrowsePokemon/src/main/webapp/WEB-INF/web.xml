<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The welcome file redirects to the entry of the first flow. -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

    <!--
    Use autowiring 
    This replaces
    <context:annotation-config />
    in the XML application context  
     -->
    <!--
    Did this in Java in PokeWebFlowApp 
    <context-param>
        <param-name>contextClass</param-name>
        <param-value>
            org.springframework.web.context.support.AnnotationConfigWebApplicationContext
        </param-value>
    </context-param>    
    -->
	<!-- The master configuration file for this Spring web application -->
    <!-- PokeWebFlowAppInitializer replaces this -->
    <!-- 
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/config/web-application-config.xml
		</param-value>
	</context-param>
    -->
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
    <!-- 
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    -->

	<!-- Processes application requests -->
    <!-- 
	<servlet>
		<servlet-name>Browse Pokemon</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value></param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>Browse Pokemon</servlet-name>
		<url-pattern>/flows/*</url-pattern>
	</servlet-mapping>
    -->

</web-app>
